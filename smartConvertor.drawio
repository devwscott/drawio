<mxfile host="app.diagrams.net" modified="2023-03-29T07:13:07.698Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36" etag="f5AqlSetwQvaFTUwXkOU" version="21.1.1" type="github" pages="3">
  <diagram name="페이지-1" id="I8e5lSfXxlh5LA0LPD_9">
    <mxGraphModel dx="3401" dy="1236" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="8mxq___2TpD1jQxsoTHe-1" value="SC&lt;br&gt;Mgr" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="80" y="200" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-2" value="Dev2" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="180" y="320" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-4" value="&lt;h1&gt;SCMgr&lt;/h1&gt;&lt;p&gt;- SCMgr이 전체 관장&lt;/p&gt;&lt;p&gt;[ Monitoring - TX ]&lt;/p&gt;&lt;p&gt;- Dev 선택해서 모니터링 커맨드 구성 요청&lt;/p&gt;&lt;p&gt;- Dev는 커맨드 buffer에 커맨드 구성&lt;/p&gt;&lt;p&gt;- SCMgr이 485 TX통해서 전송&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;[ Monitoring - RX ]&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- SCMgr이 485 RX통해서 패킷을 받으면(SCMgr RX Callback)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1) 선택된 Dev의 Parser호출하고 CRC 체크&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2) Parser에서 SCMgr의 Notify 함수호출&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Parser호출시 - Parser(xxx, SCMgr_Notify) 형태&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: SCMgr_Notify(Dev Data Type(조명상태), dev_struct) 형태&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-&amp;gt; 내부적으로 Dev Data Type에 따라 dev_struct를 선택하고&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;데이터를 얻어와서 SCMgr의 global 상태변수 업데이트&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3) SCMgr의 Global 상태변수값은 Iot hub device twin의 reported 데이터로 주기적으로 Iot Central로 업데이트(ex, 1초)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;[ Iot Central CMD Request ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;기본적으로 Monitoring동작을 수행하는 상태에서&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;Iot Central을 통한 Request가 오면&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;해당 Requset에 맞는 Dev를 선택하고 해당 Dev에게 커맨드 구성을 요청하고 485 TX를 통해서 전달&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="-480" y="120" width="350" height="620" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-5" value="Dev 1" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="20" y="320" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-6" value="485 TX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="360" y="200" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-8" value="485 RX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="360" y="320" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-15" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="8mxq___2TpD1jQxsoTHe-9" target="8mxq___2TpD1jQxsoTHe-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-9" value="&lt;h1&gt;485 RX&lt;/h1&gt;&lt;p&gt;- 485 RX Handler에서는 SCMgr의 RX handler Callback을 호출&lt;/p&gt;&lt;p&gt;- 이후 SCMgr의 RX Callback에서 dev Partser호출&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="560" y="320" width="350" height="110" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-10" value="&lt;h1&gt;Dev&lt;/h1&gt;&lt;p&gt;- Dev 내부적으로 모니터링할 CMD가 여러개 존재할 경우&amp;nbsp;&lt;/p&gt;&lt;p&gt;내부적으로 next 커맨드를 구성해서 SCMgr에게 전달&lt;/p&gt;&lt;p&gt;- 모니터링 CMD들을 모두 한번씩 SCMgr에게 전달했으면&lt;/p&gt;&lt;p&gt;이후 NULL을 전달해서 SCMgr이 다음 Dev를 선택할수 있도록 한다.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[ Dev 초기화 및 구성 ]&lt;/p&gt;&lt;p&gt;- CMD/RESP Table&lt;/p&gt;&lt;p&gt;- 초기화시 SCMgr_Register_Device()를 통해서 해당 Device를 SCMgr에 등록(List형태로...)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="80" y="440" width="350" height="310" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-11" value="Iot Central" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="80" y="40" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="8mxq___2TpD1jQxsoTHe-14" value="DRV_485_Register_Callback()" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;" vertex="1" parent="1">
          <mxGeometry x="1105" y="345" width="245" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="페이지-1의 복사본" id="RlvVvxGS79Fc-BcStzwn">
    <mxGraphModel dx="2629" dy="865" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="89IeN3RVzHcja7Aed8hU-0" />
        <mxCell id="89IeN3RVzHcja7Aed8hU-1" parent="89IeN3RVzHcja7Aed8hU-0" />
        <mxCell id="89IeN3RVzHcja7Aed8hU-2" value="SC&lt;br&gt;Mgr" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="80" y="200" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-3" value="Dev2" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="200" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-4" value="&lt;h1&gt;SCMgr&lt;/h1&gt;&lt;p&gt;- SCMgr이 전체 관장&lt;/p&gt;&lt;p&gt;[ Monitoring - TX ]&lt;/p&gt;&lt;p&gt;- Dev 선택해서 모니터링 커맨드 구성 요청&lt;/p&gt;&lt;p&gt;- Dev는 커맨드 buffer에 커맨드 구성&lt;/p&gt;&lt;p&gt;- SCMgr이 485 TX통해서 전송&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;[ Monitoring - RX ]&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- SCMgr이 485 RX통해서 패킷을 받으면(SCMgr RX Callback)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1) 선택된 Dev의 Parser호출하고 CRC 체크&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2) Parser에서 SCMgr의 Notify 함수호출&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: Parser호출시 - Parser(xxx, SCMgr_Notify) 형태&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;: SCMgr_Notify(Dev Data Type(조명상태), dev_struct) 형태&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;-&amp;gt; 내부적으로 Dev Data Type에 따라 dev_struct를 선택하고&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;데이터를 얻어와서 SCMgr의 global 상태변수 업데이트&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;3) SCMgr의 Global 상태변수값은 Iot hub device twin의 reported 데이터로 주기적으로 Iot Central로 업데이트(ex, 1초)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;[ Iot Central CMD Request ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;기본적으로 Monitoring동작을 수행하는 상태에서&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;Iot Central을 통한 Request가 오면&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;해당 Requset에 맞는 Dev를 선택하고 해당 Dev에게 커맨드 구성을 요청하고 485 TX를 통해서 전달&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="-480" y="120" width="350" height="620" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-5" value="Dev 1" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="30" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-6" value="485 TX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="360" y="200" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-7" value="485 RX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="360" y="320" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="89IeN3RVzHcja7Aed8hU-11" value="Iot Central" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="-230" y="30" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-0" value="&lt;h1&gt;SCMgr_Init()&lt;/h1&gt;&lt;div&gt;- drv_485_open 및 Handle 저장&lt;/div&gt;&lt;div&gt;- drv_485_registerCallback()으로 SCMgr_receiverCallback 등록&lt;/div&gt;&lt;div&gt;- Dev1/2 open함수 호출하고 devHandle 저장&lt;/div&gt;&lt;div&gt;: SCMgr내부에서 Dev를 Linked list로 관리하도록 구성&lt;/div&gt;&lt;div&gt;: Dev1/2 parser()함수에서 SCMgr로 data전달을 위한 SCMgr_Notify()함수 등록 - devXXX_registerNotify()??&lt;/div&gt;&lt;div&gt;- Dev 모니터링 동작을 위한 Timer Handler등록&lt;/div&gt;&lt;div&gt;: 모니터링 동작에서 TX후에 RX관련 timeout동작을 위해서&lt;/div&gt;&lt;div&gt;모니터링을 Once로 구현?&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="20" y="420" width="360" height="190" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-1" value="&lt;h1&gt;SCMgr_receiverCallback()&lt;/h1&gt;&lt;div&gt;- drv_485 RX루틴에서 해당 Callback 호출&lt;/div&gt;&lt;div&gt;- 현재 컨트롤 하고 있는 Dev를 curDevHandle로 Dev Parser()호출&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="20" y="650" width="360" height="120" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-2" value="&lt;h1&gt;SCMgr 구조체&lt;/h1&gt;&lt;div&gt;- drv485Handle : 485 TX를 위한 Handle&lt;/div&gt;&lt;div&gt;- devLists : Dev들을 등록한 linked list&lt;/div&gt;&lt;div&gt;- curDevHandle : 현재 컨트롤 하고 있는 Dev의 Handle&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="570" y="490" width="360" height="120" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-3" value="&lt;h1&gt;Dev 구조체&lt;/h1&gt;&lt;div&gt;- ops&lt;/div&gt;&lt;div&gt;: parser() :&amp;nbsp;&lt;/div&gt;&lt;div&gt;: createCommand()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="560" y="330" width="360" height="120" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-4" value="&lt;h1&gt;SCMgr_deviceStateCallback/Notify/Listener()&lt;/h1&gt;&lt;div&gt;-&amp;gt; SCMgr_deviceStateCallback(devStateType, void * data)&lt;/div&gt;&lt;div&gt;- devStateType에 따라서 data포인트를 가지고 data를 가지고 온다.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- 얻어온 Data를 SCMgr의 device Status관리 구조체 데이터를 업데이트&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="20" y="790" width="520" height="120" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-5" value="&lt;h1&gt;SCMgr_getDeviceState()&lt;/h1&gt;&lt;div&gt;-&amp;gt; Iot Central용 API&lt;/div&gt;&lt;div&gt;-&amp;gt; SCMgr_getDeviceState(devType, ID, param1, param2....)&lt;/div&gt;&lt;div&gt;: devType과 Dev내의 ID값을 가지고 data를 전달한다&lt;/div&gt;&lt;div&gt;: 어떤 Dev는 param1으로만 on/off값을 전달하고&lt;/div&gt;&lt;div&gt;: 어떤 Dev는 param1(on/off), param2(현재온도), param3(설정온도)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="20" y="980" width="490" height="150" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-6" value="&lt;h1&gt;SCMgr_Monitorig/Transfer? Handler()&lt;/h1&gt;&lt;div&gt;-&amp;gt; 기본적으로 Dev의 Montoring커맨드를 얻어와서 동작하는데&lt;/div&gt;&lt;div&gt;Iot Central을 통한 set() Request가 있으면 해당 커맨드를 먼저 처리&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;gt; Dev별로 Monitoring해야 하는 커맨드를 얻어와서 CMD Send 및&lt;/div&gt;&lt;div&gt;Resp Receive동작을 관장?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- curDevHandle로 선택된 Dev의 createCommand()함수를 호출해서 커맨드를 얻어온다&lt;/div&gt;&lt;div&gt;- drv485Handle을 통해서 해당 커맨드를 전달한다. TX&lt;/div&gt;&lt;div&gt;: 이때 SCMgr의 상태를 Dev와 CMD/RESP동작을 하는 state로 설정?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- RX time관련 Timer함수 등록&lt;/div&gt;&lt;div&gt;: Dev 및 커맨드 마다 RX timeout값이 다른거 같다.&lt;/div&gt;&lt;div&gt;:즉 커맨드 마다 RS timeout값을 가져와서 설정해야 할듯&lt;/div&gt;&lt;div&gt;: 이때 SCMgr_MonitoringHandler관련 타이머는 Stop상태로 만들어야 한다??&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="570" y="640" width="540" height="280" as="geometry" />
        </mxCell>
        <mxCell id="XZ2A_b1SRKY_ewT_t_Yi-7" value="&lt;h1&gt;SCMgr_setDeviceState()&lt;/h1&gt;&lt;div&gt;-&amp;gt; Iot Central용 API&lt;br&gt;&lt;/div&gt;&lt;div&gt;-&amp;gt; SCMgr_setDeviceState(devType, ID, param1, param2....)&lt;/div&gt;&lt;div&gt;: devType과 Dev내의 ID값을 가지고 data를 전달한다&lt;/div&gt;&lt;div&gt;: 어떤 Dev는 param1으로만 on/off값을 전달하고&lt;/div&gt;&lt;div&gt;: 어떤 Dev는 param1(on/off), param2(설정온도)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- 해당 함수로 특정 Dev의 상태변경이 요청되면&lt;/div&gt;&lt;div&gt;SCMgr의 Request list?에 넣어두고 이후 SCMgr_MonitoringHandler에서&lt;/div&gt;&lt;div&gt;해당 Request list가 있으면 기본적으로 모니터링하는 커맨드 보다 먼저 커맨드 전송하도록?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="89IeN3RVzHcja7Aed8hU-1">
          <mxGeometry x="20" y="1160" width="490" height="200" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="페이지-1의 복사본의 복사본" id="GUxLn4V1t88-sKpZLlgP">
    <mxGraphModel dx="2629" dy="865" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="-XDrDErhviG0c0KIS11g-0" />
        <mxCell id="-XDrDErhviG0c0KIS11g-1" parent="-XDrDErhviG0c0KIS11g-0" />
        <mxCell id="-XDrDErhviG0c0KIS11g-2" value="SC&lt;br&gt;Mgr" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="80" y="200" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-3" value="Dev2" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="200" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-5" value="Dev 1" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="30" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-6" value="485 TX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="360" y="200" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-7" value="485 RX" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="360" y="320" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-8" value="Iot Central" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="-230" y="30" width="160" height="80" as="geometry" />
        </mxCell>
        <mxCell id="-XDrDErhviG0c0KIS11g-9" value="&lt;h1&gt;DevLight_Init()&lt;/h1&gt;&lt;div&gt;- SCMgr_registerDevice()를 통해서 Light Dev를 등록한다?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="20" y="420" width="360" height="190" as="geometry" />
        </mxCell>
        <mxCell id="S3IddK1xW-Yj7fa_YGZy-0" value="&lt;h1&gt;Dev&lt;/h1&gt;&lt;p&gt;- Dev 내부적으로 모니터링할 CMD가 여러개 존재할 경우&amp;nbsp;&lt;/p&gt;&lt;p&gt;내부적으로 next 커맨드를 구성해서 SCMgr에게 전달&lt;/p&gt;&lt;p&gt;- 모니터링 CMD들을 모두 한번씩 SCMgr에게 전달했으면&lt;/p&gt;&lt;p&gt;이후 NULL을 전달해서 SCMgr이 다음 Dev를 선택할수 있도록 한다.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[ Dev 초기화 및 구성 ]&lt;/p&gt;&lt;p&gt;- CMD/RESP Table&lt;/p&gt;&lt;p&gt;- 초기화시 SCMgr_Register_Device()를 통해서 해당 Device를 SCMgr에 등록(List형태로...)&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="-480" y="410" width="350" height="310" as="geometry" />
        </mxCell>
        <mxCell id="S3IddK1xW-Yj7fa_YGZy-1" value="&lt;h1&gt;P_light_getCommand()&lt;/h1&gt;&lt;div&gt;- 모니터링 대상 커맨드 중에 하나를 pickup해서 SCMgr의 buffer로 전달&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- 현재 device상태가 init상태이면 init 커맨드를 pickup해서 전달&lt;/div&gt;&lt;div&gt;: init 커맨드에 대한 resp가 정상적이면 해당 device 상태를 connected로 변경하고 이후 getCommand()호출시&lt;/div&gt;&lt;div&gt;모니터링 커맨드중 하나를 pickup해서 전달&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- 모니터링 커맨드 리스트를 한번 모두 SCMgr에게 전달한 상태이면 error return해서 SCMgr이 다른 Dev모니터링 커맨드 받도록 동작&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="20" y="600" width="540" height="190" as="geometry" />
        </mxCell>
        <mxCell id="YX2DrmOZegPLFomu9Eu6-0" value="&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; font-size: 13px; line-height: 18px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;typedef&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;_scmgr_dev_obj&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* &lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;hInterface&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt; &amp;nbsp; // interface(uart) handle&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&quot;border-color: var(--border-color); color: rgb(78, 201, 176);&quot;&gt;SCMGR_DEVICE_STATE_T&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(156, 220, 254);&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;;// init, connected, disconnected&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(78, 201, 176);&quot;&gt;SCMGR_DEVICE_OPS_T&lt;/span&gt;* &lt;span style=&quot;color: rgb(156, 220, 254);&quot;&gt;ops&lt;/span&gt;;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;DRV_WIFI_MODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;mode&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;pfnWifi_EventCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;EventCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;pfnWifi_DataCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;DataCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;pfnWifi_DebugCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;DebugCallback&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;}SCMGR_DEV&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;_T&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="-560" y="730" width="550" height="220" as="geometry" />
        </mxCell>
        <mxCell id="YX2DrmOZegPLFomu9Eu6-1" value="&lt;div style=&quot;background-color: rgb(30, 30, 30); font-family: Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; font-size: 13px; line-height: 18px;&quot;&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;typedef&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;_scmgr_device_ops&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; // monitoring command return&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font color=&quot;#d4d4d4&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;color: rgb(78, 201, 176); border-color: var(--border-color);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font color=&quot;#d4d4d4&quot;&gt;&amp;nbsp;(*get&lt;/font&gt;&lt;font color=&quot;#9cdcfe&quot;&gt;Command&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(212, 212, 212); border-color: var(--border-color);&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font color=&quot;#4ec9b0&quot;&gt;unsigned char* buff, int *length&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(212, 212, 212); border-color: var(--border-color);&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;color: rgb(212, 212, 212); border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;color: rgb(212, 212, 212); border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; // control command 구성해서 return&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#d4d4d4&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;int&lt;span style=&quot;border-color: var(--border-color); color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#d4d4d4&quot;&gt;&amp;nbsp;(*req&lt;/font&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#9cdcfe&quot;&gt;Command&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;)(cmd_type, param1, param2, param3,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(0, 0, 0);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#4ec9b0&quot;&gt;unsigned char* buff, int *length&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp; &amp;nbsp; // parsing resp&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); color: rgb(0, 0, 0);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#d4d4d4&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(78, 201, 176);&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#d4d4d4&quot;&gt;&amp;nbsp;(*parser&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(212, 212, 212);&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot; color=&quot;#4ec9b0&quot;&gt;unsigned char* buff, int *length&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(212, 212, 212);&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;border-color: var(--border-color); color: rgb(212, 212, 212);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;reset&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;respHandler&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;setMode&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;DRV_WIFI_MODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; mode);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;getVersion&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* pVersion, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* pVerstr);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;getMAC&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* pMacData);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;reqScan&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;reqConnect&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* ssid, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* passwd);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;reqDisconnect&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;DRV_WIFI_MODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; mode);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;reqLink&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; sock_num, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* ipaddr, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; port);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;setupAP&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* ssid, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* passwd);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;setupLink&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; sock_num, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; port);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;K_ERR_CODE_e&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; (*&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;sendData&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;)(&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; sock_num, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT8&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;* pData, &lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;UINT32&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt; size);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(212, 212, 212);&quot;&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;}&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;SCMGR_DEVICE_OPS_T&lt;/span&gt;&lt;span style=&quot;color: #d4d4d4;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="-700" y="960" width="590" height="290" as="geometry" />
        </mxCell>
        <mxCell id="RGKpRNLPtBbpKYn9h6WN-0" value="&lt;h1&gt;P_light_reqCommand()&lt;/h1&gt;&lt;div&gt;- Iot Central로 부터 요청온 커맨드 타입 및 param을 기반으로 커맨드를 구성해서 SCMgr에게 전달&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="20" y="850" width="540" height="130" as="geometry" />
        </mxCell>
        <mxCell id="RGKpRNLPtBbpKYn9h6WN-1" value="&lt;h1&gt;P_light_parser()&lt;/h1&gt;&lt;div&gt;- Iot Central로 부터 getCommand/reqCommand() 요청을 받고 커맨드를 구성해서 SCMgr에게 전달한후 해당 커맨드에 맞는 resp parser()를 호출하고 정상이면 SCMgr Norify()함수를 통해서 해당 dev의 상태를 전달 (예, 조명 상태, 조명의 방 ID? 등..)&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- 전달된 resp packet을 내부 버퍼에 복사&lt;/div&gt;&lt;div&gt;- 마지막 command에 상응하는 resp parser()함수 호출&lt;/div&gt;&lt;div&gt;- 각각의 resp parser()함수에서는&lt;/div&gt;&lt;div&gt;&amp;nbsp;: 기대하는 rx length 와 같거나 큰지?? 확인&lt;/div&gt;&lt;div&gt;&amp;nbsp;: header / cmd와 crc 체크&lt;/div&gt;&lt;div&gt;&amp;nbsp;: 이후 data 필드를 파싱해서 SCMgr에게 dev 상태 전달.&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="20" y="1020" width="540" height="210" as="geometry" />
        </mxCell>
        <mxCell id="oLL0UKy4owjcyLXmAkZR-0" value="&lt;h1&gt;Dev 구조체&lt;/h1&gt;&lt;div&gt;- ops&lt;/div&gt;&lt;div&gt;: parser() :&amp;nbsp;&lt;/div&gt;&lt;div&gt;: createCommand()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="-XDrDErhviG0c0KIS11g-1">
          <mxGeometry x="560" y="330" width="360" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
