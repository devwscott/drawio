<mxfile host="app.diagrams.net" modified="2023-05-18T08:07:01.035Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36" etag="ApmYVhEMi0nGJmOHKi_B" version="21.3.0" type="github" pages="2">
  <diagram name="페이지-1" id="ZDlk74cAkCYiNa4a_GV9">
    <mxGraphModel dx="1562" dy="865" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-1" value="Circle" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="40" width="230" height="214" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-2" value="-radius : double = 1.0&lt;br&gt;-color : string = &quot;red&quot;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-1" vertex="1">
          <mxGeometry y="26" width="230" height="64" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="RoqaeS-hEFQxHn4rY8xm-1" vertex="1">
          <mxGeometry y="90" width="230" height="2" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-4" value="+Circle(radius:double, color:string)&lt;br&gt;&lt;br&gt;+getRadius() : double&lt;br&gt;+setRadius(radius:double) : void&amp;nbsp;&lt;br&gt;+getColor() : string&lt;br&gt;+setColor(color:string) : void&lt;br&gt;+getArea() : double" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-1" vertex="1">
          <mxGeometry y="92" width="230" height="122" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-5" value="Time" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="370" y="10" width="230" height="290" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-6" value="-hour:int = 0&lt;br&gt;-minute:int = 0&lt;br&gt;-second:int = 0" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-5" vertex="1">
          <mxGeometry y="26" width="230" height="64" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="RoqaeS-hEFQxHn4rY8xm-5" vertex="1">
          <mxGeometry y="90" width="230" height="2" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-8" value="+Time(h:int, m:int, s:int)&lt;br&gt;&lt;br&gt;+getHour() : int&lt;br&gt;+setHour(h:int) : void&lt;br&gt;+getMinute() : int&lt;br&gt;+setMinute(m:int) : void&lt;br&gt;+getSecond() : int&lt;br&gt;+setSecond(s:int) : void&lt;br&gt;&lt;br&gt;+setTime(h:int, m:int, s:int) : void&lt;br&gt;+print() : void&lt;br&gt;+nextSecond() : void" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-5" vertex="1">
          <mxGeometry y="92" width="230" height="198" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-16" value="Point" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="350" width="230" height="290" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-17" value="-x:int = 0&lt;br&gt;-y:int = 0" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-16" vertex="1">
          <mxGeometry y="26" width="230" height="64" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-18" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="RoqaeS-hEFQxHn4rY8xm-16" vertex="1">
          <mxGeometry y="90" width="230" height="2" as="geometry" />
        </mxCell>
        <mxCell id="RoqaeS-hEFQxHn4rY8xm-19" value="+Point(x:int, y:int)&lt;br&gt;&lt;br&gt;+getX() : int&lt;br&gt;+setX(x:int) : void&lt;br&gt;+getY() : int&lt;br&gt;+setY(y:int) : void&lt;br&gt;+setXY(x:int, y:int) : void&lt;br&gt;&lt;br&gt;+getMagnitude() : double&lt;br&gt;+getArgument() : double&lt;br&gt;+print() : void" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="RoqaeS-hEFQxHn4rY8xm-16" vertex="1">
          <mxGeometry y="92" width="230" height="198" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="j5jOOzbSai0Xo_f6vgvx" name="페이지-2">
    <mxGraphModel dx="5321" dy="2742" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="NNsstL4eTtnxqqrd11fd-1" value="MQTTMessage" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="390" y="160" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-2" value="- topic_ : string&lt;br&gt;- payload_ : map&amp;lt;string, string&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-1">
          <mxGeometry y="26" width="360" height="44" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-1">
          <mxGeometry y="70" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-4" value="+ MQTTMessage(topic:string&amp;amp;, payload:map&amp;amp;&amp;lt;string,string&amp;gt;&lt;br&gt;+ getTopic() : string&lt;br&gt;+ getPayload() : map&amp;lt;string, string&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-1">
          <mxGeometry y="78" width="360" height="72" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-9" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&lt;b&gt;MQTTMessageParser&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ parse(message:string&amp;amp;) : MQTTMessage*&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-200" y="90" width="360" height="95" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-10" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;Interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&lt;b&gt;MQTTMessageParserFactory&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;&gt;&lt;p style=&quot;margin:0px;margin-left:4px;&quot;&gt;+ createParser(topic:string&amp;amp;) : MQTTMessageParser*&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="-1000" y="-70" width="360" height="95" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-15" value="" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0.067;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="NNsstL4eTtnxqqrd11fd-23" target="NNsstL4eTtnxqqrd11fd-9">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="230" y="370" as="sourcePoint" />
            <mxPoint x="1040" y="332" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-17" value="MQTTMessageParserFactoryImpl" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1000" y="160" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-18" value="-&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-17">
          <mxGeometry y="26" width="360" height="44" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-19" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-17">
          <mxGeometry y="70" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-20" value="+ createParser(topic:string&amp;amp;) : MQTTMessageParser*&amp;nbsp; override" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-17">
          <mxGeometry y="78" width="360" height="72" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-21" value="#ifndef MQTTMESSAGE_H&#xa;#define MQTTMESSAGE_H&#xa;&#xa;&#xa;#include &lt;string&gt;&#xa;#include &lt;unordered_map&gt;&#xa;&#xa;&#xa;class MQTTMessage {&#xa;private:&#xa;    std::string topic_;&#xa;    std::unordered_map&lt;std::string, std::string&gt; payload_;&#xa;&#xa;&#xa;public:&#xa;    MQTTMessage(const std::string&amp; topic, const std::unordered_map&lt;std::string, std::string&gt;&amp; payload)&#xa;        : topic_(topic), payload_(payload) {}&#xa;&#xa;&#xa;    std::string getTopic() const {&#xa;        return topic_;&#xa;    }&#xa;&#xa;&#xa;    std::unordered_map&lt;std::string, std::string&gt; getPayload() const {&#xa;        return payload_;&#xa;    }&#xa;};&#xa;&#xa;&#xa;#endif  // MQTTMESSAGE_H" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="810" y="60" width="460" height="470" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-22" value="#ifndef MQTTMESSAGEPARSER_H&#xa;#define MQTTMESSAGEPARSER_H&#xa;&#xa;&#xa;#include &lt;string&gt;&#xa;#include &lt;memory&gt;&#xa;#include &quot;MQTTMessage.h&quot;&#xa;&#xa;&#xa;class MQTTMessageParser {&#xa;public:&#xa;    virtual std::shared_ptr&lt;MQTTMessage&gt; parse(const std::string&amp; message) = 0;&#xa;};&#xa;&#xa;&#xa;#endif  // MQTTMESSAGEPARSER_H" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-190" y="-225" width="370" height="250" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-23" value="LightControlParser" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-440" y="390" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-24" value="-&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-23">
          <mxGeometry y="26" width="360" height="44" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-25" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-23">
          <mxGeometry y="70" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-26" value="+ parse(message:string&amp;amp;) : MQTTMEssage*&amp;nbsp; override" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-23">
          <mxGeometry y="78" width="360" height="72" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-27" value="#ifndef LIGHTCONTROLPARSER_H&#xa;#define LIGHTCONTROLPARSER_H&#xa;&#xa;&#xa;#include &lt;iostream&gt;&#xa;#include &lt;nlohmann/json.hpp&gt;&#xa;#include &quot;MQTTMessageParser.h&quot;&#xa;&#xa;&#xa;using json = nlohmann::json;&#xa;&#xa;&#xa;class LightControlParser : public MQTTMessageParser {&#xa;public:&#xa;    std::shared_ptr&lt;MQTTMessage&gt; parse(const std::string&amp; message) override {&#xa;        std::unordered_map&lt;std::string, std::string&gt; payload;&#xa;&#xa;&#xa;        try {&#xa;            json jsonObject = json::parse(message);&#xa;&#xa;&#xa;            for (auto it = jsonObject.begin(); it != jsonObject.end(); ++it) {&#xa;                if (it-&gt;is_string()) {&#xa;                    payload[it.key()] = it-&gt;get&lt;std::string&gt;();&#xa;                }&#xa;            }&#xa;        } catch (const std::exception&amp; e) {&#xa;            std::cout &lt;&lt; &quot;Failed to parse JSON: &quot; &lt;&lt; e.what() &lt;&lt; std::endl;&#xa;            return nullptr;&#xa;        }&#xa;&#xa;&#xa;        return std::make_shared&lt;MQTTMessage&gt;(&quot;light_control&quot;, payload);&#xa;    }&#xa;};&#xa;&#xa;&#xa;#endif  // LIGHTCONTROLPARSER_H" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;strokeColor=#666666;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-440" y="620" width="400" height="590" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-28" value="CurtainControlParser" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry y="390" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-29" value="-&amp;nbsp;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-28">
          <mxGeometry y="26" width="360" height="44" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-30" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-28">
          <mxGeometry y="70" width="360" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-31" value="+ parse(message:string&amp;amp;) : MQTTMEssage*&amp;nbsp; override" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-28">
          <mxGeometry y="78" width="360" height="72" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-32" value="&lt;div&gt;#ifndef MQTTMESSAGEPARSERFACTORYIMPL_H&lt;/div&gt;&lt;div&gt;#define MQTTMESSAGEPARSERFACTORYIMPL_H&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;string&amp;gt;&lt;/div&gt;&lt;div&gt;#include &amp;lt;memory&amp;gt;&lt;/div&gt;&lt;div&gt;#include &quot;MQTTMessageParserFactory.h&quot;&lt;/div&gt;&lt;div&gt;#include &quot;LightControlParser.h&quot;&lt;/div&gt;&lt;div&gt;#include &quot;CurtainControlParser.h&quot;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;class MQTTMessageParserFactoryImpl : public MQTTMessageParserFactory {&lt;/div&gt;&lt;div&gt;public:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; std::shared_ptr&amp;lt;MQTTMessageParser&amp;gt; createParser(const std::string&amp;amp; topic) override {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 토픽별로 적절한 파서를 생성하여 반환합니다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 예를 들어, &quot;light_control&quot; 토픽은 LightControlParser를 사용하고,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &quot;curtain_control&quot; 토픽은 CurtainControlParser를 사용합니다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 필요에 따라 추가 토픽과 해당 파서를 추가할 수 있습니다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 이 예제에서는 두 개의 토픽만 처리하도록 구현되었습니다.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Light Control 파서&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (topic == &quot;light_control&quot;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return std::make_shared&amp;lt;LightControlParser&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Curtain Control 파서&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (topic == &quot;curtain_control&quot;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return std::make_shared&amp;lt;CurtainControlParser&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 추가 토픽에 대한 파서를 추가적으로 구현하고, 이곳에 추가합니다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // if (topic == &quot;additional_topic&quot;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //&amp;nbsp; &amp;nbsp; &amp;nbsp;return std::make_shared&amp;lt;AdditionalParser&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 정의되지 않은 토픽이면 nullptr을 반환합니다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return nullptr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;#endif&amp;nbsp; // MQTTMESSAGEPARSERFACTORYIMPL_H&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-1160" y="360" width="450" height="690" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-33" value="" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="NNsstL4eTtnxqqrd11fd-28" target="NNsstL4eTtnxqqrd11fd-9">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-250" y="410" as="sourcePoint" />
            <mxPoint x="-22" y="193" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-34" value="" style="endArrow=block;endSize=16;endFill=0;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="NNsstL4eTtnxqqrd11fd-17" target="NNsstL4eTtnxqqrd11fd-10">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="-610" y="-330" as="sourcePoint" />
            <mxPoint x="-810" y="-535" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="NNsstL4eTtnxqqrd11fd-35" target="NNsstL4eTtnxqqrd11fd-18">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-35" value="main.cpp" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontFamily=Helvetica;fontSize=11;fontColor=default;" vertex="1" parent="1">
          <mxGeometry x="-1460" y="185" width="220" height="86" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-36" value="- factory : MQTTMessageParserFactory" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=11;fontFamily=Helvetica;fontColor=default;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-35">
          <mxGeometry y="26" width="220" height="26" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-37" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontFamily=Helvetica;fontSize=11;fontColor=default;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-35">
          <mxGeometry y="52" width="220" height="8" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-38" value="+ main(argc, argv) : void" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=11;fontFamily=Helvetica;fontColor=default;" vertex="1" parent="NNsstL4eTtnxqqrd11fd-35">
          <mxGeometry y="60" width="220" height="26" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-40" value="#ifndef APPLICATION_H&#xa;#define APPLICATION_H&#xa;&#xa;&#xa;#include &lt;string&gt;&#xa;#include &lt;memory&gt;&#xa;#include &quot;MQTTMessageParserFactory.h&quot;&#xa;&#xa;&#xa;class Application {&#xa;private:&#xa;    std::shared_ptr&lt;MQTTMessageParserFactory&gt; parserFactory_;&#xa;&#xa;&#xa;public:&#xa;    Application(const std::shared_ptr&lt;MQTTMessageParserFactory&gt;&amp; parserFactory);&#xa;&#xa;&#xa;    void handleMessage(const std::string&amp; topic, const std::string&amp; message);&#xa;};&#xa;&#xa;&#xa;#endif  // APPLICATION_H" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-1790" y="330" width="440" height="350" as="geometry" />
        </mxCell>
        <mxCell id="NNsstL4eTtnxqqrd11fd-41" value="#include &lt;iostream&gt;&#xa;#include &quot;Application.h&quot;&#xa;&#xa;&#xa;Application::Application(const std::shared_ptr&lt;MQTTMessageParserFactory&gt;&amp; parserFactory)&#xa;    : parserFactory_(parserFactory) {}&#xa;&#xa;&#xa;void Application::handleMessage(const std::string&amp; topic, const std::string&amp; message) {&#xa;    std::shared_ptr&lt;MQTTMessageParser&gt; parser = parserFactory_-&gt;createParser();&#xa;    if (parser) {&#xa;        std::shared_ptr&lt;MQTTMessage&gt; mqttMessage = parser-&gt;parse(message);&#xa;        if (mqttMessage) {&#xa;            // 파싱된 MQTT 메시지 처리 로직을 여기에 추가합니다.&#xa;            // 예를 들어, 파싱된 토픽과 페이로드를 사용하여 다른 동작을 수행할 수 있습니다.&#xa;            std::cout &lt;&lt; &quot;Parsed Message - Topic: &quot; &lt;&lt; mqttMessage-&gt;getTopic() &lt;&lt; &quot;, Payload: &quot;;&#xa;            for (const auto&amp; item : mqttMessage-&gt;getPayload()) {&#xa;                std::cout &lt;&lt; item.first &lt;&lt; &quot;: &quot; &lt;&lt; item.second &lt;&lt; &quot;, &quot;;&#xa;            }&#xa;            std::cout &lt;&lt; std::endl;&#xa;        }&#xa;    } else {&#xa;        std::cout &lt;&lt; &quot;Parser not found for topic: &quot; &lt;&lt; topic &lt;&lt; std::endl;&#xa;    }&#xa;}" style="text;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-1790" y="740" width="530" height="380" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
